// ----------------------------------------------------------------------
// Transitions
// ----------------------------------------------------------------------
// Applies the given styles only when the browser support CSS3 3D transforms.
@mixin if-supports-3d-transforms() {
	@media (-webkit-transform-3d) {
		// Old Safari, Old Android
		// http://caniuse.com/#feat=css-featurequeries
		// https://developer.mozilla.org/en-US/docs/Web/CSS/@media/-webkit-transform-3d
		@content;
	}

	@supports (transform: translate3d(0,0,0)) {
		// The Proper Way: Using a CSS feature query
		@content;
	}
}

// example: @include single-transition(background, 1s, ease-in-out, 0);

@mixin single-transition($property, $duration, $timing-function, $delay) {
  -webkit-transition: $property $duration $timing-function;
     -moz-transition: $property $duration $timing-function;
       -o-transition: $property $duration $timing-function;
          transition: $property $duration $timing-function;
}

// example: @include double-transition(background, 1s, ease-in-out, 0, opacity, .1s, ease-in-out, 0);

@mixin double-transition($property1, $duration1, $timing-function1, $delay1, $property2, $duration2, $timing-function2, $delay2) {
  -webkit-transition: $property1 $duration1 $timing-function1 $delay1, $property2 $duration2 $timing-function2 $delay2;
     -moz-transition: $property1 $duration1 $timing-function1 $delay1, $property2 $duration2 $timing-function2 $delay2;
       -o-transition: $property1 $duration1 $timing-function1 $delay1, $property2 $duration2 $timing-function2 $delay2;
          transition: $property1 $duration1 $timing-function1 $delay1, $property2 $duration2 $timing-function2 $delay2;
}

@mixin clear-transitions() {
  -webkit-transition: all 0s ease !important;
  -moz-transition: all 0s ease !important;
  -o-transition: all 0s ease !important;
  transition: all 0s ease !important;
  -webkit-animation-duration: 0s !important;
  animation-duration: 0s !important;
}